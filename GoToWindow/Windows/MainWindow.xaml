<Window x:Class="GoToWindow.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:GoToWindow.ViewModels"
		xmlns:converters="clr-namespace:GoToWindow.Converters"
        xmlns:model="clr-namespace:GoToWindow.Extensibility.ViewModel;assembly=GoToWindow.Extensibility"
        mc:Ignorable="d"
        Title="Go To Window"
		Width="{Binding Path=AvailableWindowWidth}" Height="Auto"
		SizeToContent="Height"
        WindowStartupLocation="Manual"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None"
        Icon="/GoToWindow;component/Resources/AppIcon.ico"
        Topmost="True"
        ShowInTaskbar="False"
        FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}"
        PreviewKeyDown="Window_PreviewKeyDown"
        PreviewKeyUp="Window_PreviewKeyUp"
        Deactivated="Window_Deactivated"
        Activated="Window_Activated"
        Loaded="Window_Loaded"
        d:DataContext="{d:DesignInstance viewModels:DesignTimeMainViewModel, IsDesignTimeCreatable=True}">
	<Window.Resources>
		<Style x:Key="RoundButton" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="RoundButtonBorder" CornerRadius="22" Margin="0" BorderThickness="0" Background="LightGray" Padding="8">
							<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" TextBlock.FontSize="12" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="RoundButtonBorder" Property="Background" Value="DarkGray"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabButton" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="RoundButtonBorder" CornerRadius="14,14,0,0" Margin="0" BorderThickness="2, 2, 2, 0" Background="LightGreen" Padding="8, 7, 8, 8" >
							<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" TextBlock.FontSize="12" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="RoundButtonBorder" Property="Background" Value="GreenYellow"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<converters:IndexConverter x:Key="IndexConverter" />
		<converters:IndexWithinRangeConverter x:Key="IndexWithinRangeConverter" />
		<converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<converters:ValueConverterGroup x:Key="InvertAndVisibilityConverter">
			<converters:InverseBooleanConverter />
			<BooleanToVisibilityConverter />
		</converters:ValueConverterGroup>
	</Window.Resources>
	<Window.InputBindings>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="1"
                Gesture="CTRL+1"/>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="2"
                Gesture="CTRL+2"/>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="3"
                Gesture="CTRL+3"/>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="4"
                Gesture="CTRL+4"/>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="5"
                Gesture="CTRL+5"/>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="6"
                Gesture="CTRL+6"/>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="7"
                Gesture="CTRL+7"/>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="8"
                Gesture="CTRL+8"/>
		<KeyBinding Command="{Binding GoToWindowEntryShortcut}"
                CommandParameter="9"
                Gesture="CTRL+9"/>
	</Window.InputBindings>
	<Grid Margin="32,0,32,32">
		<Grid.RowDefinitions>
			<RowDefinition Name="UpdateRow" Height="32"/>
			<RowDefinition Name="SearchRow" Height="48"/>
			<RowDefinition Name="WindowsListRow" Height="Auto"/>
		</Grid.RowDefinitions>
		<Grid Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,38,0" Visibility="{Binding UpdateAvailable, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
			<Button Name="UpdateButton" Style="{StaticResource TabButton}" Cursor="Hand" Click="UpdateButton_OnClick">An update is available!</Button>
		</Grid>
		<Border Grid.Row="1" BorderThickness="0" CornerRadius="24" Background="White" Cursor="IBeam" MouseDown="SearchBox_MouseDown">
			<Border.Effect>
				<DropShadowEffect ShadowDepth="2" BlurRadius="16" Direction="-75" Opacity="0.8" />
			</Border.Effect>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="42" />
				</Grid.ColumnDefinitions>
				<Viewbox Grid.Column="0" Stretch="Uniform" HorizontalAlignment="Left" Margin="32, 0, 32, 0">
					<TextBox Margin="4" Name="SearchTextBox"
                             Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                             TextChanged="SearchTextBox_TextChanged"
                             PreviewKeyDown="SearchTextBox_PreviewKeyDown">
						<TextBox.Template>
							<ControlTemplate TargetType="{x:Type TextBox}">
								<ScrollViewer Name="PART_ContentHost"/>
							</ControlTemplate>
						</TextBox.Template>
					</TextBox>
				</Viewbox>
				<Button Cursor="Hand" HorizontalAlignment="Left" Name="ClearSearchButton" Grid.Column="1" Width="32" Height="32" Style="{StaticResource RoundButton}" Click="ClearSearchButton_Click" KeyboardNavigation.IsTabStop="False">
					<Image Width="16" Height="16" Source="/GoToWindow;component/Resources/Close.png"></Image>
				</Button>
			</Grid>
		</Border>
		<Border Grid.Row="2" BorderThickness="0" Background="White" Margin="0, 14, 0, 0">
			<Border.Effect>
				<DropShadowEffect ShadowDepth="2" BlurRadius="16" Direction="-75" Opacity="0.8" />
			</Border.Effect>
			<ListView Name="WindowsListView"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      MouseUp="WindowsListView_MouseClick"
                      MouseDoubleClick="WindowsListView_MouseDoubleClick"
                      PreviewKeyDown="WindowsListView_PreviewKeyDown"
                      BorderBrush="Transparent"
                      MaxHeight="{Binding Path=AvailableWindowHeight}"
					  Visibility="{Binding IsLoading, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvertAndVisibilityConverter}}"
                      ItemsSource="{Binding Windows.View}"
                      SelectedItem="{Binding SelectedWindowEntry, Mode=TwoWay}">
				<ListView.Style>
					<Style TargetType="ListView">
						<Style.Triggers>
							<Trigger Property="HasItems" Value="False">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ListView">
											<Grid Height="48">
												<TextBlock Margin="16" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Gray">No results</TextBlock>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</ListView.Style>
				<ListView.ItemTemplate>
					<DataTemplate DataType="model:IWindowSearchResult">
						<Grid>
							<ContentControl Content="{Binding View}" Height="48" HorizontalAlignment="Stretch" />
							<Grid Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.IsRowIndexVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<Border Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexWithinRangeConverter}, ConverterParameter=9, Mode=OneWay}" Name="RowIndexLabel" Grid.Column="0" CornerRadius="8" Width="16" Height="16" Margin="4" Padding="0" Background="White" BorderBrush="Black" BorderThickness="1" VerticalAlignment="Top" HorizontalAlignment="Left">
									<TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" FontSize="12" Foreground="Black" />
								</Border>
							</Grid>
						</Grid>
					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>
		</Border>
	</Grid>
</Window>
